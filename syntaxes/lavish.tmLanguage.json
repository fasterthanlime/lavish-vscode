{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Lavish",
	"patterns": [
		{
			"include": "#statements"
		}
	],
	"repository": {
		"statements": {
			"patterns": [
				{
					"include": "#declaration"
				}
			]
		},
		"declaration": {
			"patterns": [
				{
					"include": "#comment"
				},
				{
					"include": "#namespace-declaration"
				},
				{
					"include": "#function-declaration"
				},
				{
					"include": "#struct-declaration"
				},
				{
					"include": "#enum-declaration"
				},
				{
					"include": "#union-declaration"
				}
			]
		},
		"namespace-declaration": {
			"name": "meta.namespace.declaration.lavish",
			"begin": "(namespace)\\s+(\\w+)\\s*{",
			"beginCaptures": {
				"1": {
					"name": "keyword.other.fn.lavish"
				},
				"2": {
					"name": "entity.name.function.lavish"
				}
			},
			"end": "}",
			"patterns": [
				{
					"include": "#comment"
				},
				{
					"include": "#declaration"
				}
			]
		},
		"struct-declaration": {
			"name": "meta.struct.lavish",
			"begin": "(struct)\\s+(\\w+)\\s*{",
			"beginCaptures": {
				"1": {
					"name": "keyword.other.fn.lavish"
				},
				"2": {
					"name": "entity.name.type.lavish"
				}
			},
			"patterns": [
				{
					"include": "#comment"
				},
				{
					"include": "#field-declaration"
				}
			],
			"end": "}"
		},
		"enum-declaration": {
			"name": "meta.enum.lavish",
			"begin": "(enum)\\s+(\\w+)\\s*{",
			"beginCaptures": {
				"1": {
					"name": "keyword.other.fn.lavish"
				},
				"2": {
					"name": "entity.name.type.lavish"
				}
			},
			"patterns": [
				{
					"include": "#comment"
				},
				{
					"include": "#enum-variant"
				}
			],
			"end": "}"
		},
		"enum-variant": {
			"name": "meta.enum-variant.lavish",
			"begin": "[ \\t]*(\\w+)",
			"beginCaptures": {
				"1": {
					"name": "entity.name.function.lavish"
				}
			},
			"end": "(?=[,}])"
		},
		"union-declaration": {
			"name": "meta.union.lavish",
			"begin": "(union)\\s+(\\w+)\\s*{",
			"beginCaptures": {
				"1": {
					"name": "keyword.other.fn.lavish"
				},
				"2": {
					"name": "entity.name.type.lavish"
				}
			},
			"patterns": [
				{
					"include": "#comment"
				},
				{
					"include": "#union-variant"
				}
			],
			"end": "}"
		},
		"union-variant": {
			"name": "meta.union-variant.lavish",
			"begin": "[ \\t]*(\\w+)",
			"beginCaptures": {
				"1": {
					"name": "entity.name.type.lavish"
				}
			},
			"end": "(?=[,}])"
		},
		"field-declaration": {
			"name": "meta.field-declaration.lavish",
			"begin": "(\\w+):\\s*([\\w<>\\[\\]:]+)",
			"beginCaptures": {
				"1": {
					"name": "entity.name.function.lavish"
				},
				"2": {
					"name": "storage.type.field.lavish"
				}
			},
			"patterns": [],
			"end": "(?=(,|\\)))"
		},
		"function-declaration": {
			"name": "meta.function.lavish",
			"begin": "(?:(server|client)\\s+)?(?:(fn)\\s+)(\\w+)\\s*",
			"beginCaptures": {
				"1": {
					"name": "keyword.control.server.lavish"
				},
				"2": {
					"name": "keyword.other.fn.lavish"
				},
				"3": {
					"name": "entity.name.function"
				}
			},
			"patterns": [
				{
					"include": "#argument-list"
				}
			],
			"end": "(?=^)"
		},
		"argument-list": {
			"begin": "\\(",
			"patterns": [
				{
					"include": "#comment"
				},
				{
					"include": "#field-declaration"
				}
			],
			"end": "\\)"
		},
		"comment": {
			"patterns": [
				{
					"include": "#single-line-comment-consuming-line-ending"
				}
			]
		},
		"single-line-comment-consuming-line-ending": {
			"begin": "([ \\t]*//)",
			"beginCaptures": {
				"1": {
					"name": "comment.line.double-slash.lavish"
				}
			},
			"patterns": [],
			"end": "(?=^)",
			"contentName": "comment.line.double-slash.lavish"
		},
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.lavish",
					"match": "\\b(namespace|struct|enum|union|client|server|peer|fn)\\b"
				}
			]
		}
	},
	"scopeName": "source.lavish"
}